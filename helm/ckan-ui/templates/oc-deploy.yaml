{{ if .Values.openshiftCICD }}

apiVersion: build.openshift.io/v1
kind: BuildConfig
status: 
  lastVersion: 0
metadata:
  name: {{ template "ckan-ui.fullname" . }}-deploy
  #have to set this
  namespace: {{ .Values.tillerNamespace }}
  labels:
    app: {{ template "ckan-ui.name" . }}
    chart: {{ template "ckan-ui.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  nodeSelector: {}
  resources:
    requests:
      cpu: 2000m
      memory: 4G
    limits:
      cpu: 4000m
      memory: 8G
  triggers:
    - type: "imageChange"
      imageChange:
        from:
          kind: "ImageStreamTag"
          name: "{{ template "ckan-ui.fullname" . }}-image:latest"
          namespace: "{{ .Release.Namespace }}"
  strategy:
    type: JenkinsPipeline
    jenkinsPipelineStrategy:
      jenkinsfile: |-
        def helmName = "helm-v3.1.0-linux-amd64.tar.gz"
        def releaseName = "{{ .Release.Name }}"
        def gitUrl = "{{ .Values.repo.url }}.git"
        def cnfig = '''
        {{ .Values | toYaml | indent 8 }}
        '''.trim()
          node("nodejs") {
            stage("deploy (it's already built)") {
              sh """
                git clone ${gitUrl} 
                cd ckan-ui
                git checkout {{ .Values.repo.ref }}
                GITREV=\$(git rev-parse --verify HEAD)

                cd ..
                curl -L -O https://get.helm.sh/${helmName}
                tar -zxvf ${helmName}
                cd linux-amd64

                oc project {{ .Release.Namespace }}
                oc tag {{ template "ckan-ui.fullname" . }}-image:{{ .Values.repo.tag }} {{ template "ckan-ui.fullname" . }}-image:\$GITREV
                oc tag {{ template "ckan-ui.fullname" . }}-frontend-image:{{ .Values.repo.tag }} {{ template "ckan-ui.fullname" . }}-frontend-image:\$GITREV
                oc tag {{ template "ckan-ui.fullname" . }}-image:{{ .Values.repo.tag }} bcdc-ui:latest

                printf '${cnfig}' > ./config.yaml
                ./helm upgrade {{ .Release.Name }} ../ckan-ui/helm/ckan-ui -f ./config.yaml --set image.tag=\$GITREV --install
              """
          }
        }

{{- end }}
