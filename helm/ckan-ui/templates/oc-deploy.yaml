{{ if .Values.openshiftCICD }}

apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: {{ template "ckan-ui.fullname" . }}-deploy
  #have to set this
  namespace: {{ .Values.tillerNamespace }}
  labels:
    app: {{ template "ckan-ui.name" . }}
    chart: {{ template "ckan-ui.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  resources:
    requests:
      cpu: 2000m
      memory: 4G
    limits:
      cpu: 4000m
      memory: 8G
  triggers:
    - type: "imageChange"
      imageChange:
        from:
          kind: "ImageStreamTag"
          name: "{{ template "ckan-ui.fullname" . }}-image:latest"
          namespace: "{{ .Release.Namespace }}"
  strategy:
    type: JenkinsPipeline
    jenkinsPipelineStrategy:
      jenkinsfile: |-
        def helmName = "helm-v2.13.0-linux-amd64.tar.gz"
        def releaseName = "{{ .Release.Name }}"
        def gitUrl = "{{ .Values.repo.url }}.git"
        def cnfig = '''
        {{ .Values | toYaml | indent 8 }}
        '''.trim()
        podTemplate(label: 'vuejs', cloud: 'openshift', containers: [
          containerTemplate(
              name: 'vuejs',
              image: 'registry.redhat.io/openshift3/jenkins-agent-nodejs-8-rhel7',
              workingDir: '/home/jenkins',
              resourceRequestCpu: '2',
              resourceLimitCpu: '4',
              resourceRequestMemory: '4G',
              resourceLimitMemory: '8G',
          ),
        ]){
          node("vuejs") {
              stage("deploy (it's already built)") {
                sh """
                  git clone ${gitUrl} 
                  cd ckan-ui
                  git checkout {{ .Values.repo.ref }}
                  GITREV=\$(git rev-parse --verify HEAD)

                  cd frontend
                  npm install
                  npm run build
                  cd ..
                  //docker build -f Dockerfile-frontend . -t {{ template "ckan-ui.fullname" . }}-frontend-image:latest
                  //docker push docker-registry.default.svc:5000/{ template "ckan-ui.fullname" . }}-frontend-image:latest

                  cd ..
                  curl -L -O https://storage.googleapis.com/kubernetes-helm/${helmName}
                  tar -zxvf ${helmName}
                  cd linux-amd64
                  export TILLER_NAMESPACE={{ .Values.tillerNamespace }}
                  ./helm init --client-only
                  oc project {{ .Release.Namespace }}
                  oc tag {{ template "ckan-ui.fullname" . }}-image:{{ .Values.repo.tag }} {{ template "ckan-ui.fullname" . }}-image:\$GITREV
                  oc tag {{ template "ckan-ui.fullname" . }}-frontend-image:{{ .Values.repo.tag }} {{ template "ckan-ui.fullname" . }}-frontend-image:\$GITREV

                  printf '${cnfig}' > ./config.yaml
                  ./helm upgrade {{ .Release.Name }} ../ckan-ui/helm/ckan-ui -f ./config.yaml --set image.tag=\$GITREV --install
                """
            }
          }
        }

{{- end }}